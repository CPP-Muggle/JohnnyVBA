Option Explicit

Sub globalToColumnal()

''currently disable the warning


'    If MsgBox("Transform GlobalView ALLOCATION Data into Columnal Data" & vbNewLine & "Continue?", vbYesNo) = vbNo Then
'        Exit Sub
'    End If
'
    
    
    Call initialise_sheet("Transformed")
    Call matrixToColumnalData("Transformed")

    Sheets("Transformed").Cells(1, 1).Activate
    
    If Sheets("Main").Range("A3") = "" Then
        Exit Sub
    End If
    
    Dim isRemove
    isRemove = MsgBox("Remove all the funds that are not on the fund list?", vbYesNo)

    If isRemove = vbYes Then
        Call removeFund("Transformed", 2, 2, False)
    End If
        
    Sheets("Transformed").Cells(1, 1).Activate
End Sub

Sub filterFunds()
    ''Remove all funds but those we are interested in from a GA report, such as Turnover GA report
    
    ''Turnover
    ''Liquidity_+Worst-Ranked+Positions (expend =2)
    
    On Error Resume Next
    
    Dim view As String
    
    view = Sheets("main").Cells(4, 8)
    
    Select Case view
        Case "Turnover"
            Call removeFund("Webalto", 4, 3, False)
        Case "Liquidity_+Worst-Ranked+Positions"
            Call removeFund("webalto", 16, 2, False)
        Case Else
            MsgBox "Nothing happened"
    End Select
    
    Sheets("webalto").Select
    Cells(1, 1).Activate
    
    
End Sub

Sub removeFund(sheetName As String, n As Integer, startingRow As Integer, isRemove As Boolean)
    ''remove irrelavent funds from global view
    ''seems not too efficient?
    
    Application.ScreenUpdating = False

    Dim i As Long
    Dim count As Long
    Dim refLastRow As Integer
    
    refLastRow = Sheets("Main").Cells(Sheets("Main").Rows.count, 1).End(xlUp).row
    
    ''no funds on col A, hence nothing will be removed
    If refLastRow < 3 Then Exit Sub
    
    i = startingRow
    
    If isRemove Then
        
        For count = 1 To Sheets(sheetName).Cells(Sheets(sheetName).Rows.count, 1).End(xlUp).row
    
            ''the ref col
            If Application.CountIf(Sheets("Main").Range("A3:A" & refLastRow), Trim(Sheets(sheetName).Cells(i, n))) <> 0 Then
                Sheets(sheetName).Rows(i).Delete
            Else
                i = i + 1
            End If
        
        Next count

    Else
    
        For count = 1 To Sheets(sheetName).Cells(Sheets(sheetName).Rows.count, 1).End(xlUp).row
    
            ''the ref col
            If Application.CountIf(Sheets("Main").Range("A3:A" & refLastRow), Trim(Sheets(sheetName).Cells(i, n))) = 0 Then
                Sheets(sheetName).Rows(i).Delete
            Else
                i = i + 1
            End If
        
        Next count
    
    End If
    
    
    Application.ScreenUpdating = True

End Sub


Sub matrixToColumnalData(sheetName As String)

    ''this code is to transform the global view into columnal view,
    ''the reason is for easy computation and debug
    ''this work for country and sector allocation
    
    Dim d As Long
    d = Sheets("Webalto").Cells(1, 1).End(xlDown).row
    
    
    Dim i As Long
    Dim j As Long
    Dim col As Long
    Dim row As Long
    Dim total_row As Long
    
    Dim ddate As Long
    Dim fundCode As String
    Dim countryOrSector As String
    Dim ptf As Double
    Dim ref As Double
    Dim active As Double
    
    ''row is not capped
    row = Sheets("Webalto").Cells(Sheets("Webalto").Rows.count, 1).End(xlUp).row

    col = Sheets("Webalto").Cells(1, Sheets("Webalto").Columns.count).End(xlToLeft).Column
    
    
    Dim k As Long
    
    k = 1
    While d < row

        For i = d + 1 To Sheets("Webalto").Cells(d, 1).End(xlDown).row
            For j = 6 To col Step 3
                If Sheets("Webalto").Cells(i, j) <> "" Or Sheets("Webalto").Cells(i, j + 1) <> "" Then
                    Sheets(sheetName).Cells(k, 1) = Sheets("Webalto").Cells(i, 1)
                    Sheets(sheetName).Cells(k, 2) = Sheets("Webalto").Cells(i, 4)
                    Sheets(sheetName).Cells(k, 3) = Sheets("Webalto").Cells(d - 1, j)
                    Sheets(sheetName).Cells(k, 4) = Sheets("Webalto").Cells(i, j)
                    Sheets(sheetName).Cells(k, 5) = Sheets("Webalto").Cells(i, j + 1)
                    Sheets(sheetName).Cells(k, 6) = Sheets("Webalto").Cells(i, j + 2)
                    k = k + 1
                End If
            Next j
        Next i
        
        d = Sheets("Webalto").Cells(d, 1).End(xlDown).End(xlDown).row
    Wend
    
    Sheets(sheetName).Rows(1).Insert Shift:=xlDown
    Sheets(sheetName).Cells(1, 1) = Sheets("Webalto").Cells(2, 1)
    Sheets(sheetName).Cells(1, 2) = Sheets("Webalto").Cells(2, 4)
    Sheets(sheetName).Cells(1, 3) = "Attribute"
    Sheets(sheetName).Cells(1, 4) = Sheets("Webalto").Cells(2, 6)
    Sheets(sheetName).Cells(1, 5) = Sheets("Webalto").Cells(2, 6 + 1)
    Sheets(sheetName).Cells(1, 6) = Sheets("Webalto").Cells(2, 6 + 2)
    
End Sub


Function fundName(fundCode As String) As Variant
    On Error Resume Next
    If IsNumeric(fundCode) Then
        Dim fundCodeNumeric As Long
        fundCodeNumeric = CLng(fundCode)
        fundName = Application.WorksheetFunction.Index(Sheets("code_ref").Range("L:L"), Application.WorksheetFunction.Match(fundCodeNumeric, Sheets("code_ref").Range("K:K"), 0))
        
    Else
        
        fundName = Application.WorksheetFunction.Index(Sheets("code_ref").Range("L:L"), Application.WorksheetFunction.Match(fundCode, Sheets("code_ref").Range("K:K"), 0))
    End If
    
    If Err.Number <> 0 Then
        fundName = CVErr(xlErrNA)
    End If
End Function


Function microProcess(fundCode As String) As Variant

    If IsNumeric(fundCode) Then
        Dim fundCodeNumeric As Long
        fundCodeNumeric = CLng(fundCode)
        microProcess = Application.WorksheetFunction.Index(Sheets("code_ref").Range("M:M"), Application.WorksheetFunction.Match(fundCodeNumeric, Sheets("code_ref").Range("K:K"), 0))
        
    Else
        
        microProcess = Application.WorksheetFunction.Index(Sheets("code_ref").Range("M:M"), Application.WorksheetFunction.Match(fundCode, Sheets("code_ref").Range("K:K"), 0))
    End If
    
    If Err.Number <> 0 Then
        microProcess = CVErr(xlErrNA)
    End If
    
End Function

Function ddate(dateText As Long) As Date
    
    ddate = Format(DateSerial(Left(dateText, 4), Mid(dateText, 5, 2), Right(dateText, 2)), "dd/mm/yyyy")
    
End Function

